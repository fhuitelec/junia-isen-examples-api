name: Cloud_Computing_Project

on:
  pull_request:
    # We're going to use a "dev" branch for development. It's like a staging environment.
    branches: [ "main", "dev" ]
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  check_service:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
        ## Found this repo for the setup-uv action:
        ## Giving you the link to the repo if you wanna see it:
      - uses: yezz123/setup-uv@v4
      - run: uv --version
      - name: Install dependencies
        run: uv sync
      - name: Build Project
        run: uv build
      # - name: Check lint with flake8 (equivalent to eslint for python)
      #   run: |
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Running unit tests
        run: uv run pytest tests/


  build_docker_image:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - uses: yezz123/setup-uv@v4
      - run: uv sync
      # Ajoute ici les étapes spécifiques pour le build après la fusion
      - name: Build Project
        run: |
          echo "Building the project after merge"
          uv build
  
  deploy_service_on_azure:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - uses: yezz123/setup-uv@v4
      - run: uv sync
      # Ajoute ici les étapes spécifiques pour le build après la fusion
      - name: Build Project
        run: |
          echo "Building the project after merge"
          uv build
